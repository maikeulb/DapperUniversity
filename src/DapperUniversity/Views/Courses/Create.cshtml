@model DapperUniversity.ViewModels.CourseEditViewModel
@{
    ViewData["Title"] = "Course";
}

<h2>Create</h2>

<h4>Course</h4>
<hr />

<div class="columns">
  <div class="column col-md-12 col-6">
    <form name="create-course" asp-action="Create">
      <div asp-validation-summary="ModelOnly" class="text-danger"></div>
      <div class="form-group">
        <label asp-for="Course.Id" class="form-label"></label>
        <input asp-for="Course.Id" class="form-input" />
        <span asp-validation-for="Course.Id" class="text-danger"></span>
      </div>
      <div class="form-group">
        <label asp-for="Course.Title" class="form-label"></label>
        <input asp-for="Course.Title" class="form-input" />
        <span asp-validation-for="Course.Title" class="text-danger"></span>
      </div>
      <div class="form-group">
        <label asp-for="Course.Credits" class="form-label"></label>
        <input asp-for="Course.Credits" class="form-input" />
        <span asp-validation-for="Course.Credits" class="text-danger"></span>
      </div>
      <div class="form-group">
        <label asp-for="Course.DepartmentId" class="form-label"></label>
        <select asp-for="Course.DepartmentId" class ="form-select"
          asp-items="Model.Department">
          <option value="">-- Select Department --</option>
        </select>
        <span asp-validation-for="Course.DepartmentId" class="text-danger" />
       </div>
      <div class="form-group">
        <input type="submit" value="Create" class="btn btn-default" />
      </div>
    </form>
  </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-link">Back to List</a>
</div>


    <div class="success_box">All of the fields were successfully validated!</div>
    <div class="error_box"></div>

    <form name="example_form" action="#" method="POST">
        <label for="req">Required field:</label>
        <label for="alphanumeric">Alphanumeric field:</label>

        <input name="req" id="req" />
        <input name="alphanumeric" id="alphanumeric" />

        <label for="password">Password:</label>
        <label for="password_confirm">Password Confirmation (match password):</label>

        <input name="password" id="password" type="password" />
        <input name="password_confirm" id="password_confirm" type="password" />

        <label for="email">Email:</label>
        <label for="minlength">Min length field (min. 8 chars):</label>

        <input name="email" id="email" />
        <input name="minlength" id="minlength" />

        <label for="tos_checkbox">Required checkbox (example: Terms of Service)</label>
        <input name="tos_checkbox" id="tos_checkbox" type="checkbox" />

        <button class="button gray" type="submit" name="submit">Submit</button>
    </form>

@section scripts
{

<script>
// Example starter JavaScript for disabling form submissions if there are invalid fields
(function() {
  'use strict';
  window.addEventListener('load', function() {
    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.getElementsByClassName('needs-validation');
    // Loop over them and prevent submission
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);
})();
</script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/validate-js/2.0.1/validate.js"></script>
  <script>
    var validator = new FormValidator('create_course', [{
        name: 'req',
        display: 'required',
        rules: 'required'
    }, {
        name: 'alphanumeric',
        rules: 'alpha_numeric'
    }, {
        name: 'password',
        rules: 'required'
    }, {
        name: 'password_confirm',
        display: 'password confirmation',
        rules: 'required|matches[password]'
    }, {
        name: 'email',
        rules: 'valid_email'
    }, {
        name: 'minlength',
        display: 'min length',
        rules: 'min_length[8]'
    }, {
        names: ['fname', 'lname'],
        rules: 'required|alpha'
    }], function(errors) {
        if (errors.length > 0) {
            // Show the errors
        }
    });
  </script>
}

<form class="needs-validation" novalidate>
  <div class="form-row">
    <div class="col-md-4 mb-3">
      <label for="validationCustom01">First name</label>
      <input type="text" class="form-control" id="validationCustom01" placeholder="First name" value="Mark" required>
      <div class="valid-feedback">
        Looks good!
      </div>
    </div>
    <div class="col-md-4 mb-3">
      <label for="validationCustom02">Last name</label>
      <input type="text" class="form-control" id="validationCustom02" placeholder="Last name" value="Otto" required>
      <div class="valid-feedback">
        Looks good!
      </div>
    </div>
    <div class="col-md-4 mb-3">
      <label for="validationCustomUsername">Username</label>
      <div class="input-group">
        <div class="input-group-prepend">
          <span class="input-group-text" id="inputGroupPrepend"></span>
        </div>
        <input type="text" class="form-control" id="validationCustomUsername" placeholder="Username" aria-describedby="inputGroupPrepend" required>
        <div class="invalid-feedback">
          Please choose a username.
        </div>
      </div>
    </div>
  </div>
  <div class="form-row">
    <div class="col-md-6 mb-3">
      <label for="validationCustom03">City</label>
      <input type="text" class="form-control" id="validationCustom03" placeholder="City" required>
      <div class="invalid-feedback">
        Please provide a valid city.
      </div>
    </div>
    <div class="col-md-3 mb-3">
      <label for="validationCustom04">State</label>
      <input type="text" class="form-control" id="validationCustom04" placeholder="State" required>
      <div class="invalid-feedback">
        Please provide a valid state.
      </div>
    </div>
    <div class="col-md-3 mb-3">
      <label for="validationCustom05">Zip</label>
      <input type="text" class="form-control" id="validationCustom05" placeholder="Zip" required>
      <div class="invalid-feedback">
        Please provide a valid zip.
      </div>
    </div>
  </div>
  <div class="form-group">
    <div class="form-check">
      <input class="form-check-input" type="checkbox" value="" id="invalidCheck" required>
      <label class="form-check-label" for="invalidCheck">
        Agree to terms and conditions
      </label>
      <div class="invalid-feedback">
        You must agree before submitting.
      </div>
    </div>
  </div>
  <button class="btn btn-primary" type="submit">Submit form</button>
</form>
