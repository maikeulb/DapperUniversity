@model DapperUniversity.ViewModels.CourseEditViewModel
@{
    ViewData["Title"] = "Course";
}

<h2>Create</h2>

<h4>Course</h4>
<hr />

<div class="row">
  <div class="column col-md-12 col-6">
    <form asp-action="Create">
      <div asp-validation-summary="ModelOnly" class="text-danger"></div>
      <div class="form-group">
        <label asp-for="Course.Id" class="control-label"></label>
        <input asp-for="Course.Id" class="form-input" />
        <span asp-validation-for="Course.Id" class="text-danger"></span>
      </div>
      <div class="form-group">
        <label asp-for="Course.Title" class="control-label"></label>
        <input asp-for="Course.Title" class="form-input" />
        <span asp-validation-for="Course.Title" class="text-danger"></span>
      </div>
      <div class="form-group">
        <label asp-for="Course.Credits" class="control-label"></label>
        <input asp-for="Course.Credits" class="form-input" />
        <span asp-validation-for="Course.Credits" class="text-danger"></span>
      </div>
      <div class="form-group">
        <label asp-for="Course.DepartmentId" class="control-label"></label>
        <select asp-for="Course.DepartmentId" class ="form-select"
          asp-items="Model.Department">
          <option value="">-- Select Department --</option>
        </select>
        <span asp-validation-for="Course.DepartmentId" class="text-danger" />
       </div>
      <div class="form-group">
        <input type="submit" value="Create" class="btn btn-default" />
      </div>
    </form>
  </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-link">Back to List</a>
</div>


@section scripts
{

<script>
// Example starter JavaScript for disabling form submissions if there are invalid fields
(function() {
  'use strict';
  window.addEventListener('load', function() {
    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.getElementsByClassName('needs-validation');
    // Loop over them and prevent submission
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);
})();
</script>
}
