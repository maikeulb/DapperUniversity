@model DapperUniversity.Models.Instructor
@{
    ViewData["Title"] = "Instructors";
}

<main>
  <div class="col-lg-6 col-sm-12">
    <div class="mb-4">
      <h2 class="mb-3"> Create Instructor</h2>
      <hr />
      <form asp-action="Create" class="needs-validation" novalidate>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
          <label for="lastname-valid" asp-for="LastName" class="control-label"></label>
          <input id="valid-lastname" asp-for="LastName" class="form-control" required/>
          <span asp-validation-for="LastName" class="text-danger"></span>
          <div class="invalid-feedback">
            Please enter course number.
          </div>
        </div>
        <div class="form-group">
          <label for="firstname-valid" asp-for="FirstName" class="control-label"></label>
          <input id="valid-firstname" asp-for="FirstName"
          class="form-control" required/>
          <span asp-validation-for="FirstName" class="text-danger" required></span>
          <div class="invalid-feedback">
            Please enter course title.
          </div>
        </div>
        <div class="form-group">
          <label for="hiredate-valid" asp-for="HireDate" class="control-label"></label>
          <input id="valid-hiredate" asp-for="HireDate"
          class="form-control" type="date" required/>
          <span asp-validation-for="HireDate" class="text-danger" required></span>
          <div class="invalid-feedback">
            Please enter hire date.
          </div>
        </div>
        <div class="form-group">
          <label for="officeassignment-valid"
            asp-for="OfficeAssignment.Location" class="control-label"></label>
          <input id="valid-officeassignment" asp-for="OfficeAssignment.Location"
          class="form-control" required/>
          <span asp-validation-for="OfficeAssignment.Location" class="text-danger" required></span>
          <div class="invalid-feedback">
            Please enter office assignment.
          </div>
        </div>
        <div class="form-group">
          <table>
            <tr>
            @{ 
              int cnt = 0;
              List<DapperUniversity.ViewModels.AssignedCourseDataViewModel> courses = ViewBag.Courses;
              foreach (var course in courses)
              {
                  if (cnt++ % 3 == 0)
                  {
                    @:</tr><tr>
                  }
                  @:<td>
                  <input type="checkbox"
                    name="selectedCourses"
                    value="@course.CourseId" @(Html.Raw(course.Assigned ? "checked=\"checked\"" : "")) />
                    @course.CourseId @: @course.Title
                  @:</td>
              }
             @:</tr>
            }
          </table>
        </div>
        <div class="d-flex flex-row mt-4">
          <div class="form-group">
            <input type="submit" value="Create" class="btn btn-default" />
          </div>
          <div>
            <a asp-action="Index" class="btn btn-link">Back to List</a>
          </div>
        </div>
      </form>
    </div>
  </div>
</main>

@section scripts
{
  <script>
  (function() {
    'use strict';
    window.addEventListener('load', function() {
      var forms = document.getElementsByClassName('needs-validation');
      var validation = Array.prototype.filter.call(forms, function(form) {
        form.addEventListener('submit', function(event) {
          if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    }, false);
  })();
  </script>
}
